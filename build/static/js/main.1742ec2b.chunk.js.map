{"version":3,"sources":["libs/getGenderSuffix.ts","data/adjectives.ts","libs/randomNumber.ts","libs/getRandomAdjective.ts","data/nouns.ts","libs/doBavarrior.ts","libs/getRandomNoun.ts","App.tsx","serviceWorker.ts","GithubRibbon.tsx","data/githubContributors.ts","Footer.tsx","index.tsx"],"names":["gender","adjEnding","prefix","number","Math","floor","random","randomAdjectiveNumber","randomNumber","adjectives","length","word","randomFirstAdjective","getRandomAdjective","randomLastAdjective","randomNoun","randomNounNumber","nouns","getRandomNoun","fristAdjectiveSuffix","getGenderSuffix","slice","lastAdjectiveSuffix","App","props","state","bavarrior","doBavarrior","this","setState","id","className","onClick","size","React","Component","Boolean","window","location","hostname","match","GithubRibbon","href","style","position","top","right","border","src","alt","name","githubProfileUrl","Footer","contributorCount","githubContributors","map","contributor","index","target","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1742ec2b.chunk.js","sourcesContent":["import { Noun } from '../data/nouns';\n\nexport default (gender: Noun['gender'], adjEnding: string) => {\n  const prefix = adjEnding == 'a' ? 'n' : '';\n  switch (gender) {\n    case 'mas':\n      return `${prefix}er`;\n    case 'fem':\n      return `${prefix}e`;\n    default:\n      return `${prefix}s`;\n  }\n};\n","export default [\n  'ausgschammt',\n  'bläd',\n  'bsuffa',\n  'dammisch',\n  'daschissn',\n  'dasoacht',\n  'dabrunzt',\n  'deppat',\n  'dirr',\n  'fad',\n  'fett',\n  'fischaugad',\n  'foisch',\n  'gamsig',\n  'giftig',\n  'glumpad',\n  'greislig',\n  'gschamig',\n  'gschlampad',\n  'gschleckerd',\n  'gschleckt',\n  'großkopfad',\n  'gwambad',\n  'hinterfotzig',\n  'hoaklad',\n  'hoorig',\n  'lackiert',\n  'letscherd',\n  'mistig',\n  'ogsoacht',\n  'oid',\n  'oreidig',\n  'ruachad',\n  'schiach',\n  'schiaglad',\n  'windig',\n  'zahnluckad',\n  'zamgschissn',\n  'zamgsuffa',\n  'zwida',\n] as string[];\n","export default (number: number) =>\n  Math.floor(Math.random() * Math.floor(number));\n","import adjectives from '../data/adjectives';\nimport randomNumber from './randomNumber';\n\nexport default (): string => {\n  const randomAdjectiveNumber = randomNumber(adjectives.length);\n  return adjectives[randomAdjectiveNumber];\n};\n","export interface Noun {\n  word: string;\n  gender: 'mas' | 'fem' | 'neu';\n}\n\nexport default [\n  { word: 'Aff', gender: 'mas' },\n  { word: 'Antn', gender: 'fem' },\n  { word: 'Asphaltschwoibn', gender: 'fem' },\n  { word: 'Bagage', gender: 'fem' },\n  { word: 'Baze', gender: 'mas' },\n  { word: 'Bettbrunzer', gender: 'mas' },\n  { word: 'Bixn', gender: 'fem' },\n  { word: 'Blunzn', gender: 'fem' },\n  { word: 'Bochratz', gender: 'mas' },\n  { word: 'Bockfotzngsicht', gender: 'neu' },\n  { word: 'Breznsoiza', gender: 'mas' },\n  { word: 'Britschn', gender: 'fem' },\n  { word: 'Brotzeitbeitl', gender: 'mas' },\n  { word: 'Brotzeitbredl', gender: 'neu' },\n  { word: 'Brunzkache', gender: 'fem' },\n  { word: 'Dampfblaudara', gender: 'mas' },\n  { word: 'Depp', gender: 'mas' },\n  { word: 'Dirndl', gender: 'neu' },\n  { word: 'Doagaff', gender: 'mas' },\n  { word: 'Dschamsterer', gender: 'mas' },\n  { word: 'Fleischpflanzerl', gender: 'neu' },\n  { word: 'Freibierlädschn', gender: 'fem' },\n  { word: 'Giftbinkl', gender: 'mas' },\n  { word: 'Grantler', gender: 'mas' },\n  { word: 'Grattler', gender: 'mas' },\n  { word: 'Greidl', gender: 'neu' },\n  { word: 'Gschaftlhuber', gender: 'mas' },\n  { word: 'Gscheidhaferl', gender: 'neu' },\n  { word: 'Gschwoischädl', gender: 'mas' },\n  { word: 'Gsichtskrapfen', gender: 'mas' },\n  { word: 'Gspusi', gender: 'neu' },\n  { word: 'Gstanzl', gender: 'neu' },\n  { word: 'Gwasch', gender: 'neu' },\n  { word: 'Hallodri', gender: 'mas' },\n  { word: 'Hampara', gender: 'mas' },\n  { word: 'Hanswurschd', gender: 'mas' },\n  { word: 'Haring', gender: 'mas' },\n  { word: 'Haumtaucher', gender: 'mas' },\n  { word: 'Haring', gender: 'mas' },\n  { word: 'Hehna', gender: 'fem' },\n  { word: 'Hirsch', gender: 'mas' },\n  { word: 'Hua', gender: 'fem' },\n  { word: 'Hundsgrippe', gender: 'mas' },\n  { word: 'Hoixbux', gender: 'fem' },\n  { word: 'Hosnbisla', gender: 'mas' },\n  { word: 'Kläznbene', gender: 'mas' },\n  { word: 'Klousterbritschn', gender: 'fem' },\n  { word: 'Knecht', gender: 'mas' },\n  { word: 'Kniabisla', gender: 'mas' },\n  { word: 'Krampfhehna', gender: 'fem' },\n  { word: 'Kuttenbrunzer', gender: 'mas' },\n  { word: 'Loamsiada', gender: 'mas' },\n  { word: 'Lous', gender: 'fem' },\n  { word: 'Luada', gender: 'mas' },\n  { word: 'Matz', gender: 'fem' },\n  { word: 'Mistbritschn', gender: 'fem' },\n  { word: 'Natter', gender: 'fem' },\n  { word: 'Noagerldringa', gender: 'mas' },\n  { word: 'Noagerlzuzla', gender: 'mas' },\n  { word: 'Oarkopf', gender: 'mas' },\n  { word: 'Pfenningfuchser', gender: 'mas' },\n  { word: 'Rahmfotzn', gender: 'fem' },\n  { word: 'Ratschn', gender: 'fem' },\n  { word: 'Rindviech', gender: 'neu' },\n  { word: 'Rotzleffe', gender: 'mas' },\n  { word: 'Ruamzuzler', gender: 'mas' },\n  { word: 'Russ', gender: 'mas' },\n  { word: 'Saupreiß', gender: 'mas' },\n  { word: 'Schlawiner', gender: 'mas' },\n  { word: 'Schlawuzi', gender: 'mas' },\n  { word: 'Schluchtnscheißer', gender: 'mas' },\n  { word: 'Schnoin', gender: 'fem' },\n  { word: 'Schoasblodern', gender: 'fem' },\n  { word: 'Schoasdromme', gender: 'fem' },\n  { word: 'Sprichbeidl', gender: 'mas' },\n  { word: 'Stodterer', gender: 'mas' },\n  { word: 'Strawanzer', gender: 'mas' },\n  { word: 'Uhu', gender: 'mas' },\n  { word: 'Urschl', gender: 'fem' },\n  { word: 'Wedahex', gender: 'fem' },\n  { word: 'Weißwurst', gender: 'fem' },\n  { word: 'Wogscheidl', gender: 'neu' },\n  { word: 'Wuisler', gender: 'mas' },\n  { word: 'Zifern', gender: 'fem' },\n  { word: 'Zipfeklatscher', gender: 'mas' },\n  { word: 'Zipperer', gender: 'mas' },\n  { word: 'Zwidawurzn', gender: 'fem' },\n  { word: 'Zuzla', gender: 'mas' },\n] as Noun[];\n","import { Noun } from '../data/nouns';\nimport getGenderSuffix from './getGenderSuffix';\nimport getRandomAdjective from './getRandomAdjective';\nimport getRandomNoun from './getRandomNoun';\n\nexport default (): string => {\n  const randomFirstAdjective: string = getRandomAdjective();\n  const randomLastAdjective: string = getRandomAdjective();\n  const randomNoun: Noun = getRandomNoun();\n  const fristAdjectiveSuffix: string = getGenderSuffix(\n    randomNoun.gender,\n    randomFirstAdjective.slice(-1)\n  );\n  const lastAdjectiveSuffix: string = getGenderSuffix(\n    randomNoun.gender,\n    randomLastAdjective.slice(-1)\n  );\n  return `Du ${randomFirstAdjective + fristAdjectiveSuffix} ${\n    randomNoun.word\n  }, ${randomLastAdjective + lastAdjectiveSuffix}!`;\n};\n","import nouns, { Noun } from '../data/nouns';\nimport randomNumber from './randomNumber';\n\nexport default (): Noun => {\n  const randomNounNumber = randomNumber(nouns.length);\n  return nouns[randomNounNumber];\n};\n","import React from 'react';\nimport { ArrowRepeat } from 'react-bootstrap-icons';\nimport './App.css';\nimport doBavarrior from './libs/doBavarrior';\ntype BavarriorState = {\n  bavarrior: string;\n};\n\nclass App extends React.Component<{}, BavarriorState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { bavarrior: doBavarrior() };\n  }\n\n  doBavarrior() {\n    this.setState({ bavarrior: doBavarrior() });\n  }\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <div className=\"words\">\n          <h1>{this.state.bavarrior}</h1>\n          <a onClick={() => this.doBavarrior()}>\n            <ArrowRepeat size={48} />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\n\nconst GithubRibbon = () => {\n  const githubUser = 'WanielDeiss';\n  const githubRepo = 'bavarrior';\n\n  return (\n    <a href={`https://github.com/${githubUser}/${githubRepo}`}>\n      <img\n        style={{ position: 'absolute', top: 0, right: 0, border: 0 }}\n        src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\"\n        alt=\"Fork me on GitHub\"\n      />\n    </a>\n  );\n};\n\nexport default GithubRibbon;\n","export interface Contributor {\n  name: string;\n  githubProfileUrl: string;\n}\n\nexport default [\n  { name: 'Dane', githubProfileUrl: 'https://github.com/WanielDeiss' },\n  { name: 'Ande', githubProfileUrl: 'https://github.com/NewOutlaw' },\n] as Contributor[];\n","import React from 'react';\nimport { HeartFill } from 'react-bootstrap-icons';\nimport githubContributors from './data/githubContributors';\nimport './Footer.css';\n\nfunction Footer() {\n  const contributorCount = githubContributors.length;\n  return (\n    <div id=\"footer\" className=\"text-center\">\n      Gmacht mit <HeartFill /> in Bayern vom{' '}\n      {githubContributors.map((contributor, index) => {\n        return (\n          <span>\n            <a href={contributor.githubProfileUrl} target=\"_blank\">\n              {contributor.name}\n            </a>\n            {index < contributorCount - 1 ? ', ' : null}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GithubRibbon from './GithubRibbon';\nimport Footer from './Footer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GithubRibbon />\n    <App />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}